
@model NextNews.Models.Pager

<div class="container">
    @if (Model.TotalPages > 0)
    {
        <ul class="pagination justify-content-end">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Categories" asp-action="Search" asp-route-pg="1" asp-route-searchString="@ViewContext.HttpContext.Request.Query["searchString"]">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Categories" asp-action="Search" asp-route-pg="@(Model.CurrentPage - 1)" asp-route-searchString="@ViewContext.HttpContext.Request.Query["searchString"]">Previous</a>
                </li>
            }

            @for (var pge = 1; pge <= Model.TotalPages; pge++)
            {
                <li class="page-item @(pge == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-controller="Categories" asp-action="Search" asp-route-pg="@pge" asp-route-searchString="@ViewContext.HttpContext.Request.Query["searchString"]">@pge</a>
                </li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Categories" asp-action="Search" asp-route-pg="@(Model.CurrentPage + 1)" asp-route-searchString="@ViewContext.HttpContext.Request.Query["searchString"]">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Categories" asp-action="Search" asp-route-pg="@Model.TotalPages" asp-route-searchString="@ViewContext.RouteData.Values["searchString"]">Last</a>
                </li>
            }
        </ul>
    }
</div>